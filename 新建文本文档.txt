vue创建项目:
https://www.jianshu.com/p/02b12c600c7b

vue滑块验证码：
https://www.cnblogs.com/luobiao/p/12485562.html

内网穿透
https://www.jianshu.com/p/e2a82c3e36bc

滚动条管理:
https://blog.csdn.net/liux6687/article/details/83411172

https://www.cnblogs.com/qqwhsj/p/11031621.html

jQuery:
https://blog.csdn.net/millet_handsomes/article/details/90067802

adb:
https://blog.csdn.net/weixin_43927138/article/details/90477966

git checkout remotes/origin/mmq -b mamingqi2
https://blog.csdn.net/monoplasty/article/details/91850603?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-2&utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-2

生财有术书看到第322页
=============================
以自我效能为坐标的学习方法
注意复盘练习中的自我效能，不断的调整预期来提升自我效能
应对目标，在行动中，不断的调整想法和预期
提前看见可能是错误的点
努力变得更好，就是为了在一定范围内尽快变得最好
注意下自己做事的目的，通过影响是正向还是负向来判断
谁打通了环节，谁就更有优势
思考下困难下要做的决定
要有一个优良资产清单
没必要找到完美的方法再开始努力，要在努力中逐渐调整
在我的生活和目标中，那个增强飞轮是什么样子的
认清事情本身是什么样子的
打造中间系统
事情的意义和价值
不确定 系统思维
打造完美的中间工具
和目标之间的中介工具
头部玩家
给自己的战场划定范围
从自己的情况，从细节的角度对比
高阶技术
<想点大事>
精进下聊天
设置更高层次的目标，清扫认知盲区
如果不知道怎么努力，不如先从目的开始拆解，分析主路径，分析会导致失败的原因
高手的关键可能在于懂得套路比较多
在一项挑战中能不能拆出来一些模型，同样可以应对其他挑战
将知识点串成常用模型，常用模型的整理
将挑战设为变得更好
主动去面对变得更好的挑战
多想几条路，找清各条路的通道和局限
从更大的角度看，用牛刀杀鸡
有些路曲折，是因为那是别人的视角，如果从主人公的视角看，也许就是条直线
一个变好的方式，修改优秀项目的代码
走出贫穷的能力
打磨下自我效能
大机会才是改变命运的契机，用小机会不断试错
挑战一些解决问题的方式
通过试错的方式获取成长和认知
要注意痛点和爽点
能够定制化更多操作
多去思考下一件事背后的方法论
刻意练习，增强回路
要正自己，正别人，正目标，正眼前看见的人
打破自卑的阴霾
要小心那些我认为是对的东西，时时常打磨，你认为的不一定是本来面目

其中犯过的一个错误是没有，没有认知到这个世界到底是怎样的

做好关键的事带来的美好结果
而是在追求卓越--确定好方向，并进行复盘迭代，然后努力追求卓越
遇到莫名其妙的问题的时候要想办法从根源上找问题
遇到业障要退一步摆自己的位置，方能以退为进
投机商 卖机会的人
设计一套路径来提高财商，即怎么赚钱，找到可行的需求
把小概率事件变成大概率事件的路径
思考怎么能够赚到钱，再思考在一定条件范围下怎么赚到钱
知道做不到，这其中肯定有固有思维在作怪

将元问题集成下，看看还能干什么
复盘点:  打磨下，总让我反复的原因，目前看到的一点是图便宜
打磨下，总让我反复的原因，目前看到的一点是图便宜
反推算法
时时常拂拭，莫使惹尘埃。拂拭元认知，拂拭自我效能
取长补短 --- 多去想想如果发生其他更复杂的问题我该怎么解决
将原因向本体，向道的方向上归因，解决一个问题术有很多
达利欧的方法，他的人生算法
打磨人生的减法
设计几个代码模板
看清市场，做减法
认清自己，影响概率
冒险思维要分清情况

被别人说动  去说自己人的不是
装逼动作 不要以为自己什么都懂

以实际效果为主
完成客户想要的事情
找到要做的事情的难点和困难点 想办法多加练习攻克

https://github.com/moshowgame/spring-cloud-study/tree/master/spring-cloud-study-websocket

mvnrepository.com

---------------------------------------------------------------------
docker(rabbitmq) 3
mybabits  3
小服务器 3
梳理下项目结构  3
前端部分，跑起整个项目 4
单人聊天--如果不用 security 该怎么实现   1
发送消息数据表设计  2
画一张成长脑图 2


http://www.hellojava.com/a/79665.html       -------------security 教程

https://blog.csdn.net/ypp91zr/article/details/89076270
https://blog.csdn.net/weixin_43569697/article/details/89279225

